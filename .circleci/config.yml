version: 2
jobs:
  # Building & Running in Go
  build_go:
    docker:
      - image: golang:alpine
    steps:
      - checkout
      - run: mkdir -p /workspace/results
      - run: cd go && go build -o hello_go . && ./hello_go >/workspace/results/go.txt
      - persist_to_workspace:
          root: /workspace
          paths:
          - results
  # Building & Running in C++
  build_cpp:
    docker:
      - image: frebib/alpine-cmake
    steps:
      - checkout
      - run: mkdir -p /workspace/results
      - run: cd cpp && cmake . && make && ./hello_cpp >/workspace/results/cpp.txt
      - persist_to_workspace:
          root: /workspace
          paths:
            - results
  # Running in python
  build_python:
    docker:
      - image: python:alpine
    steps:
      - checkout
      - run: mkdir -p /workspace/results
      - run: cd python && ./main.py > /workspace/results/python.txt
      - persist_to_workspace:
          root: /workspace
          paths:
            - results
  # Running in node
  build_node:
    docker:
      - image: node
    steps:
      - checkout
      - run: mkdir -p /workspace/results
      - run: cd node && ./main.js >/workspace/results/node.txt
      - persist_to_workspace:
          root: /workspace
          paths:
            - results
  # We check all the outputs
  outputs_check:
      docker:
        - image: alpine
      steps:
        - checkout
        - run: apk update && apk add ca-certificates
        - attach_workspace:
            at: /workspace
        - run: .circleci/outputs_check.sh
  # final step
  final1:
    docker:
      - image: alpine
    steps:
      - run: echo "Hello world 1 !"
  final2:
    docker:
      - image: alpine
    steps:
      - run: echo "Hello world 2 !"
workflows:
  version: 2
  # We perform some builds
  build:
    jobs:
      - build_go
      - build_cpp
      - build_python
      - build_node
      - outputs_check:
          requires:
            - build_go
            - build_cpp
            - build_python
            - build_node
      - final1:
          requires:
            - outputs_check
      - human_validation2:
          type: approval
          requires:
            - outputs_check
      - final2:
          requires:
            - human_validation2
  build2:
    jobs:
      - human_validation2:
          type: approval
      - final2:
          requires:
            - human_validation2